// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class IssueClosed extends ethereum.Event {
  get params(): IssueClosed__Params {
    return new IssueClosed__Params(this);
  }
}

export class IssueClosed__Params {
  _event: IssueClosed;

  constructor(event: IssueClosed) {
    this._event = event;
  }

  get drugId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get issueId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class IssueOpened extends ethereum.Event {
  get params(): IssueOpened__Params {
    return new IssueOpened__Params(this);
  }
}

export class IssueOpened__Params {
  _event: IssueOpened;

  constructor(event: IssueOpened) {
    this._event = event;
  }

  get drugId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get issueId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Log extends ethereum.Event {
  get params(): Log__Params {
    return new Log__Params(this);
  }
}

export class Log__Params {
  _event: Log;

  constructor(event: Log) {
    this._event = event;
  }

  get drugId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get entity(): string {
    return this._event.parameters[1].value.toString();
  }

  get action(): string {
    return this._event.parameters[2].value.toString();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ManufacturerRevoked extends ethereum.Event {
  get params(): ManufacturerRevoked__Params {
    return new ManufacturerRevoked__Params(this);
  }
}

export class ManufacturerRevoked__Params {
  _event: ManufacturerRevoked;

  constructor(event: ManufacturerRevoked) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get license(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RegisteredDrug extends ethereum.Event {
  get params(): RegisteredDrug__Params {
    return new RegisteredDrug__Params(this);
  }
}

export class RegisteredDrug__Params {
  _event: RegisteredDrug;

  constructor(event: RegisteredDrug) {
    this._event = event;
  }

  get drugId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get manufacturer(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RegisteredManufacturer extends ethereum.Event {
  get params(): RegisteredManufacturer__Params {
    return new RegisteredManufacturer__Params(this);
  }
}

export class RegisteredManufacturer__Params {
  _event: RegisteredManufacturer;

  constructor(event: RegisteredManufacturer) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class DrugLedger__getManufacturerResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get license(): string {
    return this[1].toString();
  }
}

export class DrugLedger__retrieveResultValue0Struct extends ethereum.Tuple {
  get cid(): string {
    return this[0].toString();
  }

  get manufacturer(): Address {
    return this[1].toAddress();
  }

  get issues(): Array<DrugLedger__retrieveResultValue0IssuesStruct> {
    return this[2].toTupleArray<DrugLedger__retrieveResultValue0IssuesStruct>();
  }
}

export class DrugLedger__retrieveResultValue0IssuesStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get date(): BigInt {
    return this[2].toBigInt();
  }

  get owner(): Address {
    return this[3].toAddress();
  }

  get resolved(): boolean {
    return this[4].toBoolean();
  }

  get reason(): string {
    return this[5].toString();
  }
}

export class DrugLedger extends ethereum.SmartContract {
  static bind(address: Address): DrugLedger {
    return new DrugLedger("DrugLedger", address);
  }

  getManufacturer(
    addr: Address,
  ): DrugLedger__getManufacturerResultValue0Struct {
    let result = super.call(
      "getManufacturer",
      "getManufacturer(address):((string,string))",
      [ethereum.Value.fromAddress(addr)],
    );

    return changetype<DrugLedger__getManufacturerResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getManufacturer(
    addr: Address,
  ): ethereum.CallResult<DrugLedger__getManufacturerResultValue0Struct> {
    let result = super.tryCall(
      "getManufacturer",
      "getManufacturer(address):((string,string))",
      [ethereum.Value.fromAddress(addr)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DrugLedger__getManufacturerResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  id(): BigInt {
    let result = super.call("id", "id():(uint256)", []);

    return result[0].toBigInt();
  }

  try_id(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("id", "id():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registerDrug(cid: string): BigInt {
    let result = super.call("registerDrug", "registerDrug(string):(uint256)", [
      ethereum.Value.fromString(cid),
    ]);

    return result[0].toBigInt();
  }

  try_registerDrug(cid: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "registerDrug",
      "registerDrug(string):(uint256)",
      [ethereum.Value.fromString(cid)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  retrieve(_id: BigInt): DrugLedger__retrieveResultValue0Struct {
    let result = super.call(
      "retrieve",
      "retrieve(uint256):((string,address,(string,string,uint256,address,bool,string)[]))",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );

    return changetype<DrugLedger__retrieveResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_retrieve(
    _id: BigInt,
  ): ethereum.CallResult<DrugLedger__retrieveResultValue0Struct> {
    let result = super.tryCall(
      "retrieve",
      "retrieve(uint256):((string,address,(string,string,uint256,address,bool,string)[]))",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DrugLedger__retrieveResultValue0Struct>(value[0].toTuple()),
    );
  }

  verify(_drugId: BigInt): boolean {
    let result = super.call("verify", "verify(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_drugId),
    ]);

    return result[0].toBoolean();
  }

  try_verify(_drugId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("verify", "verify(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_drugId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddLogCall extends ethereum.Call {
  get inputs(): AddLogCall__Inputs {
    return new AddLogCall__Inputs(this);
  }

  get outputs(): AddLogCall__Outputs {
    return new AddLogCall__Outputs(this);
  }
}

export class AddLogCall__Inputs {
  _call: AddLogCall;

  constructor(call: AddLogCall) {
    this._call = call;
  }

  get _drugId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _entity(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _action(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddLogCall__Outputs {
  _call: AddLogCall;

  constructor(call: AddLogCall) {
    this._call = call;
  }
}

export class CloseIssueCall extends ethereum.Call {
  get inputs(): CloseIssueCall__Inputs {
    return new CloseIssueCall__Inputs(this);
  }

  get outputs(): CloseIssueCall__Outputs {
    return new CloseIssueCall__Outputs(this);
  }
}

export class CloseIssueCall__Inputs {
  _call: CloseIssueCall;

  constructor(call: CloseIssueCall) {
    this._call = call;
  }

  get _drugId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _issueId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CloseIssueCall__Outputs {
  _call: CloseIssueCall;

  constructor(call: CloseIssueCall) {
    this._call = call;
  }
}

export class OpenIssueCall extends ethereum.Call {
  get inputs(): OpenIssueCall__Inputs {
    return new OpenIssueCall__Inputs(this);
  }

  get outputs(): OpenIssueCall__Outputs {
    return new OpenIssueCall__Outputs(this);
  }
}

export class OpenIssueCall__Inputs {
  _call: OpenIssueCall;

  constructor(call: OpenIssueCall) {
    this._call = call;
  }

  get _drugId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class OpenIssueCall__Outputs {
  _call: OpenIssueCall;

  constructor(call: OpenIssueCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _license(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RegisterDrugCall extends ethereum.Call {
  get inputs(): RegisterDrugCall__Inputs {
    return new RegisterDrugCall__Inputs(this);
  }

  get outputs(): RegisterDrugCall__Outputs {
    return new RegisterDrugCall__Outputs(this);
  }
}

export class RegisterDrugCall__Inputs {
  _call: RegisterDrugCall;

  constructor(call: RegisterDrugCall) {
    this._call = call;
  }

  get cid(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterDrugCall__Outputs {
  _call: RegisterDrugCall;

  constructor(call: RegisterDrugCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RevokeCall extends ethereum.Call {
  get inputs(): RevokeCall__Inputs {
    return new RevokeCall__Inputs(this);
  }

  get outputs(): RevokeCall__Outputs {
    return new RevokeCall__Outputs(this);
  }
}

export class RevokeCall__Inputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeCall__Outputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }
}
